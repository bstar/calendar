
> cla-calendar@0.1.0 test:coverage
> vitest --coverage --run


 RUN  v3.2.4 /Users/bstar/projects/cla/calendar
      Coverage enabled with v8

 ✓ src/components/ErrorBoundary.test.tsx (22 tests) 579ms
stdout | src/components/CLACalendarComponents/CalendarPortal.test.tsx > CalendarPortal > Basic Rendering > should not render when isOpen is false
[Portal] Creating portal element
[Portal] Portal element created and added to DOM
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mfalse[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Early return - missing element or ref
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mtrue[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Dimensions: {
  portalHeight: [33m400[39m,
  portalWidth: [33m500[39m,
  triggerRect: { top: [33m0[39m, left: [33m0[39m, bottom: [33m0[39m, right: [33m0[39m }
}
[Portal] Applying position: { top: [33m8[39m, left: [33m0[39m }
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mtrue[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Dimensions: {
  portalHeight: [33m400[39m,
  portalWidth: [33m500[39m,
  triggerRect: { top: [33m0[39m, left: [33m0[39m, bottom: [33m0[39m, right: [33m0[39m }
}
[Portal] Applying position: { top: [33m8[39m, left: [33m0[39m }

stdout | src/components/CLACalendarComponents/CalendarPortal.test.tsx > CalendarPortal > Basic Rendering > should render when isOpen is true
[Portal] Creating portal element
[Portal] Portal element created and added to DOM
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mfalse[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Early return - missing element or ref
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mtrue[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Dimensions: {
  portalHeight: [33m400[39m,
  portalWidth: [33m500[39m,
  triggerRect: { top: [33m0[39m, left: [33m0[39m, bottom: [33m0[39m, right: [33m0[39m }
}
[Portal] Applying position: { top: [33m8[39m, left: [33m0[39m }
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mtrue[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Dimensions: {
  portalHeight: [33m400[39m,
  portalWidth: [33m500[39m,
  triggerRect: { top: [33m0[39m, left: [33m0[39m, bottom: [33m0[39m, right: [33m0[39m }
}
[Portal] Applying position: { top: [33m8[39m, left: [33m0[39m }

stdout | src/components/CLACalendarComponents/CalendarPortal.test.tsx > CalendarPortal > Basic Rendering > should create portal element with correct class
[Portal] Creating portal element
[Portal] Portal element created and added to DOM
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mfalse[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Early return - missing element or ref
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mtrue[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Dimensions: {
  portalHeight: [33m400[39m,
  portalWidth: [33m500[39m,
  triggerRect: { top: [33m0[39m, left: [33m0[39m, bottom: [33m0[39m, right: [33m0[39m }
}
[Portal] Applying position: { top: [33m8[39m, left: [33m0[39m }
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mtrue[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Dimensions: {
  portalHeight: [33m400[39m,
  portalWidth: [33m500[39m,
  triggerRect: { top: [33m0[39m, left: [33m0[39m, bottom: [33m0[39m, right: [33m0[39m }
}
[Portal] Applying position: { top: [33m8[39m, left: [33m0[39m }

stdout | src/components/CLACalendarComponents/CalendarPortal.test.tsx > CalendarPortal > Positioning > should position portal at bottom-left by default
[Portal] Creating portal element
[Portal] Portal element created and added to DOM
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mfalse[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Early return - missing element or ref
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mtrue[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Dimensions: {
  portalHeight: [33m400[39m,
  portalWidth: [33m500[39m,
  triggerRect: { top: [33m100[39m, left: [33m50[39m, bottom: [33m130[39m, right: [33m250[39m }
}
[Portal] Applying position: { top: [33m138[39m, left: [33m50[39m }
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mtrue[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Dimensions: {
  portalHeight: [33m400[39m,
  portalWidth: [33m500[39m,
  triggerRect: { top: [33m100[39m, left: [33m50[39m, bottom: [33m130[39m, right: [33m250[39m }
}
[Portal] Applying position: { top: [33m138[39m, left: [33m50[39m }

stdout | src/components/CLACalendarComponents/CalendarPortal.test.tsx > CalendarPortal > Positioning > should position portal at bottom-right when specified
[Portal] Creating portal element
[Portal] Portal element created and added to DOM
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m

stdout | src/components/CLACalendarComponents/CalendarPortal.test.tsx > CalendarPortal > Positioning > should position portal at bottom-right when specified
[Portal] updatePosition called
[Portal] portalElement exists: [33mtrue[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Dimensions: {
  portalHeight: [33m400[39m,
  portalWidth: [33m300[39m,
  triggerRect: { top: [33m100[39m, left: [33m50[39m, bottom: [33m130[39m, right: [33m250[39m }
}
[Portal] Applying position: { top: [33m138[39m, left: [33m-50[39m }

stdout | src/components/CLACalendarComponents/CalendarPortal.test.tsx > CalendarPortal > Positioning > should position portal at bottom-right when specified
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m

stdout | src/components/CLACalendarComponents/CalendarPortal.test.tsx > CalendarPortal > Positioning > should position portal at top-left when specified
[Portal] Creating portal element
[Portal] Portal element created and added to DOM
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mfalse[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Early return - missing element or ref
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mtrue[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Dimensions: {
  portalHeight: [33m400[39m,
  portalWidth: [33m500[39m,
  triggerRect: { top: [33m100[39m, left: [33m50[39m, bottom: [33m130[39m, right: [33m250[39m }
}
[Portal] Applying position: { top: [33m-308[39m, left: [33m50[39m }
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mtrue[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Dimensions: {
  portalHeight: [33m400[39m,
  portalWidth: [33m500[39m,
  triggerRect: { top: [33m100[39m, left: [33m50[39m, bottom: [33m130[39m, right: [33m250[39m }
}
[Portal] Applying position: { top: [33m-308[39m, left: [33m50[39m }

stdout | src/components/CLACalendarComponents/CalendarPortal.test.tsx > CalendarPortal > Positioning > should use dynamic positioning when enabled
[Portal] Creating portal element
[Portal] Portal element created and added to DOM
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mfalse[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Early return - missing element or ref
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mtrue[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Dimensions: {
  portalHeight: [33m400[39m,
  portalWidth: [33m500[39m,
  triggerRect: { top: [33m700[39m, left: [33m50[39m, bottom: [33m730[39m, right: [33m250[39m }
}
[Portal] Applying position: { top: [33m292[39m, left: [33m50[39m }
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mtrue[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Dimensions: {
  portalHeight: [33m400[39m,
  portalWidth: [33m500[39m,
  triggerRect: { top: [33m700[39m, left: [33m50[39m, bottom: [33m730[39m, right: [33m250[39m }
}
[Portal] Applying position: { top: [33m292[39m, left: [33m50[39m }

stdout | src/components/CLACalendarComponents/CalendarPortal.test.tsx > CalendarPortal > Event Handling > should close on click outside when onClose is provided
[Portal] Creating portal element
[Portal] Portal element created and added to DOM
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mfalse[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Early return - missing element or ref
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mtrue[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Dimensions: {
  portalHeight: [33m400[39m,
  portalWidth: [33m500[39m,
  triggerRect: { top: [33m700[39m, left: [33m50[39m, bottom: [33m730[39m, right: [33m250[39m }
}
[Portal] Applying position: { top: [33m292[39m, left: [33m50[39m }
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mtrue[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Dimensions: {
  portalHeight: [33m400[39m,
  portalWidth: [33m500[39m,
  triggerRect: { top: [33m700[39m, left: [33m50[39m, bottom: [33m730[39m, right: [33m250[39m }
}
[Portal] Applying position: { top: [33m292[39m, left: [33m50[39m }

stdout | src/components/CLACalendarComponents/CalendarPortal.test.tsx > CalendarPortal > Event Handling > should not close when clicking inside the portal
[Portal] Creating portal element
[Portal] Portal element created and added to DOM
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mfalse[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Early return - missing element or ref
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mtrue[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Dimensions: {
  portalHeight: [33m400[39m,
  portalWidth: [33m500[39m,
  triggerRect: { top: [33m700[39m, left: [33m50[39m, bottom: [33m730[39m, right: [33m250[39m }
}
[Portal] Applying position: { top: [33m292[39m, left: [33m50[39m }
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mtrue[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Dimensions: {
  portalHeight: [33m400[39m,
  portalWidth: [33m500[39m,
  triggerRect: { top: [33m700[39m, left: [33m50[39m, bottom: [33m730[39m, right: [33m250[39m }
}
[Portal] Applying position: { top: [33m292[39m, left: [33m50[39m }

stdout | src/components/CLACalendarComponents/CalendarPortal.test.tsx > CalendarPortal > Event Handling > should not close when clicking on trigger element
[Portal] Creating portal element
[Portal] Portal element created and added to DOM
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mfalse[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Early return - missing element or ref
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mtrue[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Dimensions: {
  portalHeight: [33m400[39m,
  portalWidth: [33m500[39m,
  triggerRect: { top: [33m700[39m, left: [33m50[39m, bottom: [33m730[39m, right: [33m250[39m }
}
[Portal] Applying position: { top: [33m292[39m, left: [33m50[39m }
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mtrue[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Dimensions: {
  portalHeight: [33m400[39m,
  portalWidth: [33m500[39m,
  triggerRect: { top: [33m700[39m, left: [33m50[39m, bottom: [33m730[39m, right: [33m250[39m }
}
[Portal] Applying position: { top: [33m292[39m, left: [33m50[39m }

stdout | src/components/CLACalendarComponents/CalendarPortal.test.tsx > CalendarPortal > Event Handling > should close on ESC key press
[Portal] Creating portal element
[Portal] Portal element created and added to DOM
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mfalse[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Early return - missing element or ref
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mtrue[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Dimensions: {
  portalHeight: [33m400[39m,
  portalWidth: [33m500[39m,
  triggerRect: { top: [33m700[39m, left: [33m50[39m, bottom: [33m730[39m, right: [33m250[39m }
}
[Portal] Applying position: { top: [33m292[39m, left: [33m50[39m }
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mtrue[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Dimensions: {
  portalHeight: [33m400[39m,
  portalWidth: [33m500[39m,
  triggerRect: { top: [33m700[39m, left: [33m50[39m, bottom: [33m730[39m, right: [33m250[39m }
}
[Portal] Applying position: { top: [33m292[39m, left: [33m50[39m }

stdout | src/components/CLACalendarComponents/CalendarPortal.test.tsx > CalendarPortal > Event Handling > should not respond to other keys
[Portal] Creating portal element
[Portal] Portal element created and added to DOM
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mfalse[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Early return - missing element or ref
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mtrue[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Dimensions: {
  portalHeight: [33m400[39m,
  portalWidth: [33m500[39m,
  triggerRect: { top: [33m700[39m, left: [33m50[39m, bottom: [33m730[39m, right: [33m250[39m }
}
[Portal] Applying position: { top: [33m292[39m, left: [33m50[39m }
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mtrue[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Dimensions: {
  portalHeight: [33m400[39m,
  portalWidth: [33m500[39m,
  triggerRect: { top: [33m700[39m, left: [33m50[39m, bottom: [33m730[39m, right: [33m250[39m }
}
[Portal] Applying position: { top: [33m292[39m, left: [33m50[39m }

stdout | src/components/CLACalendarComponents/CalendarPortal.test.tsx > CalendarPortal > Window Events > should update position on window resize
[Portal] Creating portal element
[Portal] Portal element created and added to DOM
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mfalse[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Early return - missing element or ref
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mtrue[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Dimensions: {
  portalHeight: [33m400[39m,
  portalWidth: [33m500[39m,
  triggerRect: { top: [33m700[39m, left: [33m50[39m, bottom: [33m730[39m, right: [33m250[39m }
}
[Portal] Applying position: { top: [33m292[39m, left: [33m50[39m }
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mtrue[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Dimensions: {
  portalHeight: [33m400[39m,
  portalWidth: [33m500[39m,
  triggerRect: { top: [33m700[39m, left: [33m50[39m, bottom: [33m730[39m, right: [33m250[39m }
}
[Portal] Applying position: { top: [33m292[39m, left: [33m50[39m }

stdout | src/components/CLACalendarComponents/CalendarPortal.test.tsx > CalendarPortal > Window Events > should update position on window scroll
[Portal] Creating portal element
[Portal] Portal element created and added to DOM
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mfalse[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Early return - missing element or ref
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mtrue[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Dimensions: {
  portalHeight: [33m400[39m,
  portalWidth: [33m500[39m,
  triggerRect: { top: [33m700[39m, left: [33m50[39m, bottom: [33m730[39m, right: [33m250[39m }
}
[Portal] Applying position: { top: [33m292[39m, left: [33m50[39m }
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mtrue[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Dimensions: {
  portalHeight: [33m400[39m,
  portalWidth: [33m500[39m,
  triggerRect: { top: [33m700[39m, left: [33m50[39m, bottom: [33m730[39m, right: [33m250[39m }
}
[Portal] Applying position: { top: [33m292[39m, left: [33m50[39m }

 ✓ src/components/CLACalendarComponents/CalendarComponents.test.tsx (65 tests) 332ms
stdout | src/components/CLACalendarComponents/CalendarPortal.test.tsx > CalendarPortal > Window Events > should update position on window scroll
[Portal] updatePosition called
[Portal] portalElement exists: [33mtrue[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Dimensions: {
  portalHeight: [33m400[39m,
  portalWidth: [33m500[39m,
  triggerRect: { top: [33m700[39m, left: [33m50[39m, bottom: [33m730[39m, right: [33m250[39m }
}
[Portal] Applying position: { top: [33m292[39m, left: [33m50[39m }

stdout | src/components/CLACalendarComponents/CalendarPortal.test.tsx > CalendarPortal > Intersection Observer > should reposition when portal is partially cut off
[Portal] Creating portal element
[Portal] Portal element created and added to DOM
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mfalse[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Early return - missing element or ref
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mtrue[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Dimensions: {
  portalHeight: [33m400[39m,
  portalWidth: [33m500[39m,
  triggerRect: { top: [33m700[39m, left: [33m50[39m, bottom: [33m730[39m, right: [33m250[39m }
}
[Portal] Applying position: { top: [33m292[39m, left: [33m50[39m }
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mtrue[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Dimensions: {
  portalHeight: [33m400[39m,
  portalWidth: [33m500[39m,
  triggerRect: { top: [33m700[39m, left: [33m50[39m, bottom: [33m730[39m, right: [33m250[39m }
}
[Portal] Applying position: { top: [33m292[39m, left: [33m50[39m }

stdout | src/components/CLACalendarComponents/CalendarPortal.test.tsx > CalendarPortal > Intersection Observer > should reposition when portal is partially cut off
[Portal] Calendar partially cut off, repositioning
[Portal] updatePosition called
[Portal] portalElement exists: [33mtrue[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Dimensions: {
  portalHeight: [33m400[39m,
  portalWidth: [33m500[39m,
  triggerRect: { top: [33m700[39m, left: [33m50[39m, bottom: [33m730[39m, right: [33m250[39m }
}
[Portal] Applying position: { top: [33m292[39m, left: [33m50[39m }

stdout | src/components/CLACalendarComponents/CalendarPortal.test.tsx > CalendarPortal > Intersection Observer > should not reposition when fully visible
[Portal] Creating portal element
[Portal] Portal element created and added to DOM
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mfalse[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Early return - missing element or ref
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mtrue[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Dimensions: {
  portalHeight: [33m400[39m,
  portalWidth: [33m500[39m,
  triggerRect: { top: [33m700[39m, left: [33m50[39m, bottom: [33m730[39m, right: [33m250[39m }
}
[Portal] Applying position: { top: [33m292[39m, left: [33m50[39m }
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mtrue[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Dimensions: {
  portalHeight: [33m400[39m,
  portalWidth: [33m500[39m,
  triggerRect: { top: [33m700[39m, left: [33m50[39m, bottom: [33m730[39m, right: [33m250[39m }
}
[Portal] Applying position: { top: [33m292[39m, left: [33m50[39m }

stdout | src/components/CLACalendarComponents/CalendarPortal.test.tsx > CalendarPortal > Style Application > should apply custom portal styles
[Portal] Creating portal element
[Portal] Portal element created and added to DOM
[Portal] Position update effect triggered
[Portal] portalStyle: { width: [32m'500px'[39m, backgroundColor: [32m'red'[39m, padding: [32m'20px'[39m }
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mfalse[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Early return - missing element or ref
[Portal] Position update effect triggered
[Portal] portalStyle: { width: [32m'500px'[39m, backgroundColor: [32m'red'[39m, padding: [32m'20px'[39m }
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mtrue[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Dimensions: {
  portalHeight: [33m400[39m,
  portalWidth: [33m500[39m,
  triggerRect: { top: [33m700[39m, left: [33m50[39m, bottom: [33m730[39m, right: [33m250[39m }
}
[Portal] Applying position: { top: [33m292[39m, left: [33m50[39m }

stdout | src/components/CLACalendarComponents/CalendarPortal.test.tsx > CalendarPortal > Style Application > should preserve fixed positioning despite custom styles
[Portal] Creating portal element
[Portal] Portal element created and added to DOM
[Portal] Position update effect triggered
[Portal] portalStyle: { position: [32m'absolute'[39m, zIndex: [32m'100'[39m }
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mfalse[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Early return - missing element or ref
[Portal] Position update effect triggered
[Portal] portalStyle: { position: [32m'absolute'[39m, zIndex: [32m'100'[39m }
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mtrue[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Dimensions: {
  portalHeight: [33m400[39m,
  portalWidth: [33m500[39m,
  triggerRect: { top: [33m700[39m, left: [33m50[39m, bottom: [33m730[39m, right: [33m250[39m }
}
[Portal] Applying position: { top: [33m292[39m, left: [33m50[39m }

stdout | src/components/CLACalendarComponents/CalendarPortal.test.tsx > CalendarPortal > Style Application > should apply visibility style when positioned
[Portal] Creating portal element
[Portal] Portal element created and added to DOM
[Portal] Position update effect triggered
[Portal] portalStyle: { visibility: [32m'visible'[39m }
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mfalse[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Early return - missing element or ref
[Portal] Position update effect triggered
[Portal] portalStyle: { visibility: [32m'visible'[39m }
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mtrue[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Dimensions: {
  portalHeight: [33m400[39m,
  portalWidth: [33m500[39m,
  triggerRect: { top: [33m700[39m, left: [33m50[39m, bottom: [33m730[39m, right: [33m250[39m }
}
[Portal] Applying position: { top: [33m292[39m, left: [33m50[39m }

stdout | src/components/CLACalendarComponents/CalendarPortal.test.tsx > CalendarPortal > Style Application > should apply all supported CSS properties
[Portal] Creating portal element
[Portal] Portal element created and added to DOM
[Portal] Position update effect triggered
[Portal] portalStyle: {
  display: [32m'block'[39m,
  pointerEvents: [32m'none'[39m,
  right: [32m'10px'[39m,
  bottom: [32m'20px'[39m,
  margin: [32m'5px'[39m,
  border: [32m'1px solid red'[39m,
  borderRadius: [32m'8px'[39m,
  boxShadow: [32m'0 2px 4px rgba(0,0,0,0.1)'[39m,
  color: [32m'blue'[39m,
  opacity: [32m'0.9'[39m,
  transition: [32m'all 0.3s'[39m,
  transform: [32m'scale(0.95)'[39m
}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mfalse[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Early return - missing element or ref
[Portal] Position update effect triggered
[Portal] portalStyle: {
  display: [32m'block'[39m,
  pointerEvents: [32m'none'[39m,
  right: [32m'10px'[39m,
  bottom: [32m'20px'[39m,
  margin: [32m'5px'[39m,
  border: [32m'1px solid red'[39m,
  borderRadius: [32m'8px'[39m,
  boxShadow: [32m'0 2px 4px rgba(0,0,0,0.1)'[39m,
  color: [32m'blue'[39m,
  opacity: [32m'0.9'[39m,
  transition: [32m'all 0.3s'[39m,
  transform: [32m'scale(0.95)'[39m
}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mtrue[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Dimensions: {
  portalHeight: [33m400[39m,
  portalWidth: [33m500[39m,
  triggerRect: { top: [33m700[39m, left: [33m50[39m, bottom: [33m730[39m, right: [33m250[39m }
}
[Portal] Applying position: { top: [33m292[39m, left: [33m50[39m }

stdout | src/components/CLACalendarComponents/CalendarPortal.test.tsx > CalendarPortal > Lifecycle > should clean up portal element on unmount
[Portal] Creating portal element
[Portal] Portal element created and added to DOM
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mfalse[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Early return - missing element or ref
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mtrue[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Dimensions: {
  portalHeight: [33m400[39m,
  portalWidth: [33m500[39m,
  triggerRect: { top: [33m700[39m, left: [33m50[39m, bottom: [33m730[39m, right: [33m250[39m }
}
[Portal] Applying position: { top: [33m292[39m, left: [33m50[39m }
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mtrue[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Dimensions: {
  portalHeight: [33m400[39m,
  portalWidth: [33m500[39m,
  triggerRect: { top: [33m700[39m, left: [33m50[39m, bottom: [33m730[39m, right: [33m250[39m }
}
[Portal] Applying position: { top: [33m292[39m, left: [33m50[39m }

stdout | src/components/CLACalendarComponents/CalendarPortal.test.tsx > CalendarPortal > Lifecycle > should remove event listeners on unmount
[Portal] Creating portal element
[Portal] Portal element created and added to DOM
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mfalse[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Early return - missing element or ref
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mtrue[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Dimensions: {
  portalHeight: [33m400[39m,
  portalWidth: [33m500[39m,
  triggerRect: { top: [33m700[39m, left: [33m50[39m, bottom: [33m730[39m, right: [33m250[39m }
}
[Portal] Applying position: { top: [33m292[39m, left: [33m50[39m }
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mtrue[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Dimensions: {
  portalHeight: [33m400[39m,
  portalWidth: [33m500[39m,
  triggerRect: { top: [33m700[39m, left: [33m50[39m, bottom: [33m730[39m, right: [33m250[39m }
}
[Portal] Applying position: { top: [33m292[39m, left: [33m50[39m }

stdout | src/components/CLACalendarComponents/CalendarPortal.test.tsx > CalendarPortal > Lifecycle > should handle rapid open/close cycles
[Portal] Creating portal element
[Portal] Portal element created and added to DOM
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mfalse[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Early return - missing element or ref
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mtrue[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Dimensions: {
  portalHeight: [33m400[39m,
  portalWidth: [33m500[39m,
  triggerRect: { top: [33m700[39m, left: [33m50[39m, bottom: [33m730[39m, right: [33m250[39m }
}
[Portal] Applying position: { top: [33m292[39m, left: [33m50[39m }
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mtrue[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Dimensions: {
  portalHeight: [33m400[39m,
  portalWidth: [33m500[39m,
  triggerRect: { top: [33m700[39m, left: [33m50[39m, bottom: [33m730[39m, right: [33m250[39m }
}
[Portal] Applying position: { top: [33m292[39m, left: [33m50[39m }
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mtrue[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Dimensions: {
  portalHeight: [33m400[39m,
  portalWidth: [33m500[39m,
  triggerRect: { top: [33m700[39m, left: [33m50[39m, bottom: [33m730[39m, right: [33m250[39m }
}
[Portal] Applying position: { top: [33m292[39m, left: [33m50[39m }
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mtrue[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Dimensions: {
  portalHeight: [33m400[39m,
  portalWidth: [33m500[39m,
  triggerRect: { top: [33m700[39m, left: [33m50[39m, bottom: [33m730[39m, right: [33m250[39m }
}
[Portal] Applying position: { top: [33m292[39m, left: [33m50[39m }
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mtrue[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Dimensions: {
  portalHeight: [33m400[39m,
  portalWidth: [33m500[39m,
  triggerRect: { top: [33m700[39m, left: [33m50[39m, bottom: [33m730[39m, right: [33m250[39m }
}
[Portal] Applying position: { top: [33m292[39m, left: [33m50[39m }
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mtrue[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Dimensions: {
  portalHeight: [33m400[39m,
  portalWidth: [33m500[39m,
  triggerRect: { top: [33m700[39m, left: [33m50[39m, bottom: [33m730[39m, right: [33m250[39m }
}
[Portal] Applying position: { top: [33m292[39m, left: [33m50[39m }
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mtrue[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Dimensions: {
  portalHeight: [33m400[39m,
  portalWidth: [33m500[39m,
  triggerRect: { top: [33m700[39m, left: [33m50[39m, bottom: [33m730[39m, right: [33m250[39m }
}
[Portal] Applying position: { top: [33m292[39m, left: [33m50[39m }
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mtrue[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Dimensions: {
  portalHeight: [33m400[39m,
  portalWidth: [33m500[39m,
  triggerRect: { top: [33m700[39m, left: [33m50[39m, bottom: [33m730[39m, right: [33m250[39m }
}
[Portal] Applying position: { top: [33m292[39m, left: [33m50[39m }
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mtrue[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Dimensions: {
  portalHeight: [33m400[39m,
  portalWidth: [33m500[39m,
  triggerRect: { top: [33m700[39m, left: [33m50[39m, bottom: [33m730[39m, right: [33m250[39m }
}
[Portal] Applying position: { top: [33m292[39m, left: [33m50[39m }
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mtrue[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Dimensions: {
  portalHeight: [33m400[39m,
  portalWidth: [33m500[39m,
  triggerRect: { top: [33m700[39m, left: [33m50[39m, bottom: [33m730[39m, right: [33m250[39m }
}
[Portal] Applying position: { top: [33m292[39m, left: [33m50[39m }
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mtrue[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Dimensions: {
  portalHeight: [33m400[39m,
  portalWidth: [33m500[39m,
  triggerRect: { top: [33m700[39m, left: [33m50[39m, bottom: [33m730[39m, right: [33m250[39m }
}
[Portal] Applying position: { top: [33m292[39m, left: [33m50[39m }
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mtrue[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Dimensions: {
  portalHeight: [33m400[39m,
  portalWidth: [33m500[39m,
  triggerRect: { top: [33m700[39m, left: [33m50[39m, bottom: [33m730[39m, right: [33m250[39m }
}
[Portal] Applying position: { top: [33m292[39m, left: [33m50[39m }

stdout | src/components/CLACalendarComponents/CalendarPortal.test.tsx > CalendarPortal > Edge Cases > should handle missing triggerRef gracefully
[Portal] Creating portal element
[Portal] Portal element created and added to DOM
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mfalse[39m
[Portal] triggerRef.current exists: [33mfalse[39m
[Portal] Early return - missing element or ref
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mtrue[39m
[Portal] triggerRef.current exists: [33mfalse[39m
[Portal] Early return - missing element or ref

stdout | src/components/CLACalendarComponents/CalendarPortal.test.tsx > CalendarPortal > Edge Cases > should handle portal style updates
[Portal] Creating portal element
[Portal] Portal element created and added to DOM
[Portal] Position update effect triggered
[Portal] portalStyle: { width: [32m'300px'[39m }
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mfalse[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Early return - missing element or ref
[Portal] Position update effect triggered
[Portal] portalStyle: { width: [32m'300px'[39m }
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mtrue[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Dimensions: {
  portalHeight: [33m400[39m,
  portalWidth: [33m500[39m,
  triggerRect: { top: [33m700[39m, left: [33m50[39m, bottom: [33m730[39m, right: [33m250[39m }
}
[Portal] Applying position: { top: [33m292[39m, left: [33m50[39m }
[Portal] Position update effect triggered
[Portal] portalStyle: { width: [32m'500px'[39m }
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mtrue[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Dimensions: {
  portalHeight: [33m400[39m,
  portalWidth: [33m500[39m,
  triggerRect: { top: [33m700[39m, left: [33m50[39m, bottom: [33m730[39m, right: [33m250[39m }
}
[Portal] Applying position: { top: [33m292[39m, left: [33m50[39m }

stdout | src/components/CLACalendarComponents/CalendarPortal.test.tsx > CalendarPortal > Edge Cases > should show fallback content when no children provided
[Portal] Creating portal element
[Portal] Portal element created and added to DOM
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mfalse[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Early return - missing element or ref
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mtrue[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Dimensions: {
  portalHeight: [33m400[39m,
  portalWidth: [33m500[39m,
  triggerRect: { top: [33m700[39m, left: [33m50[39m, bottom: [33m730[39m, right: [33m250[39m }
}
[Portal] Applying position: { top: [33m292[39m, left: [33m50[39m }
[Portal] Position update effect triggered
[Portal] portalStyle: {}
[Portal] Should update position? [33mtrue[39m
[Portal] updatePosition called
[Portal] portalElement exists: [33mtrue[39m
[Portal] triggerRef.current exists: [33mtrue[39m
[Portal] Dimensions: {
  portalHeight: [33m400[39m,
  portalWidth: [33m500[39m,
  triggerRect: { top: [33m700[39m, left: [33m50[39m, bottom: [33m730[39m, right: [33m250[39m }
}
[Portal] Applying position: { top: [33m292[39m, left: [33m50[39m }

 ✓ src/components/CLACalendar/components/MonthGrid/MonthGrid.test.tsx (30 tests) 512ms
 ✓ src/components/CLACalendar.multiple-instances.test.tsx (3 tests) 286ms
 ✓ src/components/CLACalendarComponents/CalendarPortal.test.tsx (29 tests | 3 skipped) 273ms
stderr | src/components/CLACalendar.test.tsx > CLACalendar > Date Selection > should handle clear button
Warning: An update to CLACalendar inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at CLACalendar (/Users/bstar/projects/cla/calendar/src/components/CLACalendar.tsx:165:13)

stdout | src/components/CLACalendar.test.tsx > CLACalendar > Error Boundary > should handle errors gracefully
🚨 Calendar Error [calendar-error-1753459809638-dp6iyv50e]
  ┌───────────┬──────────────────────────────────────────┐
  │ (index)   │ Values                                   │
  ├───────────┼──────────────────────────────────────────┤
  │ Error ID  │ [32m'calendar-error-1753459809638-dp6iyv50e'[39m │
  │ Component │ [32m'Calendar'[39m                               │
  │ Message   │ [32m'Test error'[39m                             │
  │ Timestamp │ [32m'2025-07-25T16:10:09.638Z'[39m               │
  │ URL       │ [32m'http://localhost:3000/'[39m                 │
  └───────────┴──────────────────────────────────────────┘
  📋 Full Error Details
    {
      "errorId": "calendar-error-1753459809638-dp6iyv50e",
      "timestamp": "2025-07-25T16:10:09.638Z",
      "component": "Calendar",
      "message": "Test error",
      "stack": "Error: Test error\n    at ErrorComponent (/Users/bstar/projects/cla/calendar/src/components/CLACalendar.test.tsx:717:15)\n    at renderWithHooks (/Users/bstar/projects/cla/calendar/node_modules/react-dom/cjs/react-dom.development.js:15486:18)\n    at mountIndeterminateComponent (/Users/bstar/projects/cla/calendar/node_modules/react-dom/cjs/react-dom.development.js:20103:13)\n    at beginWork (/Users/bstar/projects/cla/calendar/node_modules/react-dom/cjs/react-dom.development.js:21626:16)\n    at beginWork$1 (/Users/bstar/projects/cla/calendar/node_modules/react-dom/cjs/react-dom.development.js:27465:14)\n    at performUnitOfWork (/Users/bstar/projects/cla/calendar/node_modules/react-dom/cjs/react-dom.development.js:26599:12)\n    at workLoopSync (/Users/bstar/projects/cla/calendar/node_modules/react-dom/cjs/react-dom.development.js:26505:5)\n    at renderRootSync (/Users/bstar/projects/cla/calendar/node_modules/react-dom/cjs/react-dom.development.js:26473:7)\n    at recoverFromConcurrentError (/Users/bstar/projects/cla/calendar/node_modules/react-dom/cjs/react-dom.development.js:25889:20)\n    at performSyncWorkOnRoot (/Users/bstar/projects/cla/calendar/node_modules/react-dom/cjs/react-dom.development.js:26135:20)",
      "componentStack": "\n    at ErrorComponent (/Users/bstar/projects/cla/calendar/src/components/CLACalendar.test.tsx:816:15)\n    at CalendarErrorBoundary (/Users/bstar/projects/cla/calendar/src/components/ErrorBoundary.tsx:10:5)",
      "userAgent": "Mozilla/5.0 (darwin) AppleWebKit/537.36 (KHTML, like Gecko) jsdom/26.1.0",
      "url": "http://localhost:3000/",
      "props": {
        "children": "React component"
      },
      "state": {
        "hasError": true,
        "errorId": "calendar-error-1753459809638-dp6iyv50e",
        "errorMessage": "Test error"
      }
    }

stdout | src/components/CLACalendar.test.tsx > CLACalendar > Error Boundary > should trigger error handler with error details
🚨 CLACalendar Error [calendar-error-1753459809685-hoxlbpsdy]
  ┌───────────┬──────────────────────────────────────────┐
  │ (index)   │ Values                                   │
  ├───────────┼──────────────────────────────────────────┤
  │ Error ID  │ [32m'calendar-error-1753459809685-hoxlbpsdy'[39m │
  │ Component │ [32m'CLACalendar'[39m                            │
  │ Message   │ [32m'Test calendar error'[39m                    │
  │ Timestamp │ [32m'2025-07-25T16:10:09.685Z'[39m               │
  │ URL       │ [32m'http://localhost:3000/'[39m                 │
  └───────────┴──────────────────────────────────────────┘
  📋 Full Error Details
    {
      "errorId": "calendar-error-1753459809685-hoxlbpsdy",
      "timestamp": "2025-07-25T16:10:09.685Z",
      "component": "CLACalendar",
      "message": "Test calendar error",
      "stack": "Error: Test calendar error\n    at ErrorComponent (/Users/bstar/projects/cla/calendar/src/components/CLACalendar.test.tsx:764:15)\n    at renderWithHooks (/Users/bstar/projects/cla/calendar/node_modules/react-dom/cjs/react-dom.development.js:15486:18)\n    at mountIndeterminateComponent (/Users/bstar/projects/cla/calendar/node_modules/react-dom/cjs/react-dom.development.js:20103:13)\n    at beginWork (/Users/bstar/projects/cla/calendar/node_modules/react-dom/cjs/react-dom.development.js:21626:16)\n    at beginWork$1 (/Users/bstar/projects/cla/calendar/node_modules/react-dom/cjs/react-dom.development.js:27465:14)\n    at performUnitOfWork (/Users/bstar/projects/cla/calendar/node_modules/react-dom/cjs/react-dom.development.js:26599:12)\n    at workLoopSync (/Users/bstar/projects/cla/calendar/node_modules/react-dom/cjs/react-dom.development.js:26505:5)\n    at renderRootSync (/Users/bstar/projects/cla/calendar/node_modules/react-dom/cjs/react-dom.development.js:26473:7)\n    at recoverFromConcurrentError (/Users/bstar/projects/cla/calendar/node_modules/react-dom/cjs/react-dom.development.js:25889:20)\n    at performSyncWorkOnRoot (/Users/bstar/projects/cla/calendar/node_modules/react-dom/cjs/react-dom.development.js:26135:20)",
      "componentStack": "\n    at ErrorComponent (/Users/bstar/projects/cla/calendar/src/components/CLACalendar.test.tsx:865:15)\n    at CalendarErrorBoundary (/Users/bstar/projects/cla/calendar/src/components/ErrorBoundary.tsx:10:5)\n    at TestWrapper (/Users/bstar/projects/cla/calendar/src/components/CLACalendar.test.tsx:868:59)",
      "userAgent": "Mozilla/5.0 (darwin) AppleWebKit/537.36 (KHTML, like Gecko) jsdom/26.1.0",
      "url": "http://localhost:3000/",
      "props": {
        "componentName": "CLACalendar",
        "onError": "Custom error handler provided",
        "children": "React component"
      },
      "state": {
        "hasError": true,
        "errorId": "calendar-error-1753459809685-hoxlbpsdy",
        "errorMessage": "Test calendar error"
      }
    }

 ✓ src/components/CLACalendarComponents/Notification.test.tsx (16 tests) 140ms
 ✓ src/components/CLACalendar.restrictions.test.tsx (23 tests) 1304ms
 ✓ src/components/CLACalendarComponents/PortalCalendar.test.tsx (18 tests) 37ms
stdout | src/components/CLACalendar.test.tsx > CLACalendar > Additional Features Coverage > should handle error boundary onError callback
🚨 TestCalendar Error [calendar-error-1753459810749-fyylpngbz]
  ┌───────────┬──────────────────────────────────────────┐
  │ (index)   │ Values                                   │
  ├───────────┼──────────────────────────────────────────┤
  │ Error ID  │ [32m'calendar-error-1753459810749-fyylpngbz'[39m │
  │ Component │ [32m'TestCalendar'[39m                           │
  │ Message   │ [32m'Test error'[39m                             │
  │ Timestamp │ [32m'2025-07-25T16:10:10.749Z'[39m               │
  │ URL       │ [32m'http://localhost:3000/'[39m                 │
  └───────────┴──────────────────────────────────────────┘
  📋 Full Error Details
    {
      "errorId": "calendar-error-1753459810749-fyylpngbz",
      "timestamp": "2025-07-25T16:10:10.749Z",
      "component": "TestCalendar",
      "message": "Test error",
      "stack": "Error: Test error\n    at ThrowingComponent (/Users/bstar/projects/cla/calendar/src/components/CLACalendar.test.tsx:1628:15)\n    at renderWithHooks (/Users/bstar/projects/cla/calendar/node_modules/react-dom/cjs/react-dom.development.js:15486:18)\n    at mountIndeterminateComponent (/Users/bstar/projects/cla/calendar/node_modules/react-dom/cjs/react-dom.development.js:20103:13)\n    at beginWork (/Users/bstar/projects/cla/calendar/node_modules/react-dom/cjs/react-dom.development.js:21626:16)\n    at beginWork$1 (/Users/bstar/projects/cla/calendar/node_modules/react-dom/cjs/react-dom.development.js:27465:14)\n    at performUnitOfWork (/Users/bstar/projects/cla/calendar/node_modules/react-dom/cjs/react-dom.development.js:26599:12)\n    at workLoopSync (/Users/bstar/projects/cla/calendar/node_modules/react-dom/cjs/react-dom.development.js:26505:5)\n    at renderRootSync (/Users/bstar/projects/cla/calendar/node_modules/react-dom/cjs/react-dom.development.js:26473:7)\n    at recoverFromConcurrentError (/Users/bstar/projects/cla/calendar/node_modules/react-dom/cjs/react-dom.development.js:25889:20)\n    at performSyncWorkOnRoot (/Users/bstar/projects/cla/calendar/node_modules/react-dom/cjs/react-dom.development.js:26135:20)",
      "componentStack": "\n    at ThrowingComponent (/Users/bstar/projects/cla/calendar/src/components/CLACalendar.test.tsx:1835:15)\n    at CalendarErrorBoundary (/Users/bstar/projects/cla/calendar/src/components/ErrorBoundary.tsx:10:5)",
      "userAgent": "Mozilla/5.0 (darwin) AppleWebKit/537.36 (KHTML, like Gecko) jsdom/26.1.0",
      "url": "http://localhost:3000/",
      "props": {
        "componentName": "TestCalendar",
        "onError": "Custom error handler provided",
        "children": "React component"
      },
      "state": {
        "hasError": true,
        "errorId": "calendar-error-1753459810749-fyylpngbz",
        "errorMessage": "Test error"
      }
    }

stdout | src/components/CLACalendar.test.tsx > CLACalendar > Additional Features Coverage > should handle CLACalendar error boundary logging
🚨 CLACalendar Error [calendar-error-1753459810753-g1uj370fx]
  ┌───────────┬──────────────────────────────────────────┐
  │ (index)   │ Values                                   │
  ├───────────┼──────────────────────────────────────────┤
  │ Error ID  │ [32m'calendar-error-1753459810753-g1uj370fx'[39m │
  │ Component │ [32m'CLACalendar'[39m                            │
  │ Message   │ [32m'Test calendar error'[39m                    │
  │ Timestamp │ [32m'2025-07-25T16:10:10.753Z'[39m               │
  │ URL       │ [32m'http://localhost:3000/'[39m                 │
  └───────────┴──────────────────────────────────────────┘
  📋 Full Error Details
    {
      "errorId": "calendar-error-1753459810753-g1uj370fx",
      "timestamp": "2025-07-25T16:10:10.753Z",
      "component": "CLACalendar",
      "message": "Test calendar error",
      "stack": "Error: Test calendar error\n    at ThrowingComponent (/Users/bstar/projects/cla/calendar/src/components/CLACalendar.test.tsx:1649:15)\n    at renderWithHooks (/Users/bstar/projects/cla/calendar/node_modules/react-dom/cjs/react-dom.development.js:15486:18)\n    at mountIndeterminateComponent (/Users/bstar/projects/cla/calendar/node_modules/react-dom/cjs/react-dom.development.js:20103:13)\n    at beginWork (/Users/bstar/projects/cla/calendar/node_modules/react-dom/cjs/react-dom.development.js:21626:16)\n    at beginWork$1 (/Users/bstar/projects/cla/calendar/node_modules/react-dom/cjs/react-dom.development.js:27465:14)\n    at performUnitOfWork (/Users/bstar/projects/cla/calendar/node_modules/react-dom/cjs/react-dom.development.js:26599:12)\n    at workLoopSync (/Users/bstar/projects/cla/calendar/node_modules/react-dom/cjs/react-dom.development.js:26505:5)\n    at renderRootSync (/Users/bstar/projects/cla/calendar/node_modules/react-dom/cjs/react-dom.development.js:26473:7)\n    at recoverFromConcurrentError (/Users/bstar/projects/cla/calendar/node_modules/react-dom/cjs/react-dom.development.js:25889:20)\n    at performSyncWorkOnRoot (/Users/bstar/projects/cla/calendar/node_modules/react-dom/cjs/react-dom.development.js:26135:20)",
      "componentStack": "\n    at ThrowingComponent (/Users/bstar/projects/cla/calendar/src/components/CLACalendar.test.tsx:1856:15)\n    at CalendarErrorBoundary (/Users/bstar/projects/cla/calendar/src/components/ErrorBoundary.tsx:10:5)",
      "userAgent": "Mozilla/5.0 (darwin) AppleWebKit/537.36 (KHTML, like Gecko) jsdom/26.1.0",
      "url": "http://localhost:3000/",
      "props": {
        "componentName": "CLACalendar",
        "onError": "Custom error handler provided",
        "children": "React component"
      },
      "state": {
        "hasError": true,
        "errorId": "calendar-error-1753459810753-g1uj370fx",
        "errorMessage": "Test calendar error"
      }
    }

 ✓ src/components/CLACalendarComponents/CalendarCoordinator.test.ts (21 tests) 99ms
 ✓ src/components/CLACalendarComponents/CalendarPortalCoordination.test.ts (18 tests) 84ms
 ✓ src/components/CLACalendar.config-features.test.tsx (36 tests) 2250ms
   ✓ CLACalendar Configuration Features > Position and Layout Configuration > should handle different visible month configurations  589ms
 ✓ src/components/CLACalendarComponents/CalendarPortal.hook.test.tsx (14 tests) 27ms
stderr | src/components/CLACalendar.test.tsx > CLACalendar > Additional Function Coverage > should handle continuous month advancement with out of bounds scroll
Warning: An update to CLACalendar inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at CLACalendar (/Users/bstar/projects/cla/calendar/src/components/CLACalendar.tsx:165:13)

 ✓ src/components/CLACalendar/components/DayCell/DayCell.test.tsx (10 tests) 161ms
 ✓ src/components/CLACalendar/components/CalendarGrid/CalendarGrid.test.tsx (24 tests) 201ms
 ✓ src/components/CLACalendar/components/MonthGrid/MonthGrid.renderTooltip.test.tsx (3 tests) 31ms
 ✓ src/components/CLACalendarComponents/selection/DateRangeSelectionManager.test.ts (36 tests) 12ms
 ✓ src/utils/DateUtils.test.ts (101 tests) 26ms
 ✓ src/components/CLACalendarComponents/restrictions/RestrictionManager.test.ts (40 tests) 19ms
 ✓ src/components/CLACalendarComponents/handlers/CLACalendarHandlers.test.ts (37 tests) 18ms
 ✓ src/components/CLACalendarComponents/selection/DateRangeSelectionManager.edge.test.ts (16 tests) 13ms
 ✓ src/components/CLACalendarComponents/restrictions/RestrictionManager.edge.test.ts (29 tests) 33ms
 ✓ src/components/CLACalendarComponents/layers/LayerManager.test.ts (22 tests) 6ms
 ✓ src/components/CLACalendar.config.test.ts (46 tests) 8ms
 ✓ src/components/CLACalendar/utils/calendar.utils.test.ts (18 tests) 3ms
 ✓ src/components/CLACalendarComponents/restrictions/RestrictionBackgroundGenerator.test.ts (34 tests) 6ms
 ✓ src/components/CLACalendarComponents/layers/LayerRenderer.test.tsx (16 tests) 5ms
 ✓ src/components/CLACalendar/components/DayCell/DayCell.utils.test.ts (33 tests) 5ms
stdout | src/components/CLACalendar.test.tsx > CLACalendar > Additional Function Coverage > should handle error boundary console logging
🚨 CLACalendar Error [calendar-error-1753459816400-wpm53a4x0]
  ┌───────────┬──────────────────────────────────────────┐
  │ (index)   │ Values                                   │
  ├───────────┼──────────────────────────────────────────┤
  │ Error ID  │ [32m'calendar-error-1753459816400-wpm53a4x0'[39m │
  │ Component │ [32m'CLACalendar'[39m                            │
  │ Message   │ [32m'Test error for console'[39m                 │
  │ Timestamp │ [32m'2025-07-25T16:10:16.400Z'[39m               │
  │ URL       │ [32m'http://localhost:3000/'[39m                 │
  └───────────┴──────────────────────────────────────────┘
  📋 Full Error Details
    {
      "errorId": "calendar-error-1753459816400-wpm53a4x0",
      "timestamp": "2025-07-25T16:10:16.400Z",
      "component": "CLACalendar",
      "message": "Test error for console",
      "stack": "Error: Test error for console\n    at ErrorComponent (/Users/bstar/projects/cla/calendar/src/components/CLACalendar.test.tsx:2152:15)\n    at renderWithHooks (/Users/bstar/projects/cla/calendar/node_modules/react-dom/cjs/react-dom.development.js:15486:18)\n    at mountIndeterminateComponent (/Users/bstar/projects/cla/calendar/node_modules/react-dom/cjs/react-dom.development.js:20103:13)\n    at beginWork (/Users/bstar/projects/cla/calendar/node_modules/react-dom/cjs/react-dom.development.js:21626:16)\n    at beginWork$1 (/Users/bstar/projects/cla/calendar/node_modules/react-dom/cjs/react-dom.development.js:27465:14)\n    at performUnitOfWork (/Users/bstar/projects/cla/calendar/node_modules/react-dom/cjs/react-dom.development.js:26599:12)\n    at workLoopSync (/Users/bstar/projects/cla/calendar/node_modules/react-dom/cjs/react-dom.development.js:26505:5)\n    at renderRootSync (/Users/bstar/projects/cla/calendar/node_modules/react-dom/cjs/react-dom.development.js:26473:7)\n    at recoverFromConcurrentError (/Users/bstar/projects/cla/calendar/node_modules/react-dom/cjs/react-dom.development.js:25889:20)\n    at performSyncWorkOnRoot (/Users/bstar/projects/cla/calendar/node_modules/react-dom/cjs/react-dom.development.js:26135:20)",
      "componentStack": "\n    at ErrorComponent (/Users/bstar/projects/cla/calendar/src/components/CLACalendar.test.tsx:2470:15)\n    at CalendarErrorBoundary (/Users/bstar/projects/cla/calendar/src/components/ErrorBoundary.tsx:10:5)\n    at TestWrapper (/Users/bstar/projects/cla/calendar/src/components/CLACalendar.test.tsx:2473:59)",
      "userAgent": "Mozilla/5.0 (darwin) AppleWebKit/537.36 (KHTML, like Gecko) jsdom/26.1.0",
      "url": "http://localhost:3000/",
      "props": {
        "componentName": "CLACalendar",
        "onError": "Custom error handler provided",
        "children": "React component"
      },
      "state": {
        "hasError": true,
        "errorId": "calendar-error-1753459816400-wpm53a4x0",
        "errorMessage": "Test error for console"
      }
    }

 ❯ src/components/CLACalendar.test.tsx (73 tests | 2 failed) 7907ms
   ✓ Date Input Validation > should handle date input in various formats 165ms
   ✓ CLACalendar > Component Initialization > should render embedded calendar immediately 22ms
   ✓ CLACalendar > Component Initialization > should not render popup calendar until opened 4ms
   ✓ CLACalendar > Component Initialization > should lazy load layers when calendar is first opened 57ms
   ✓ CLACalendar > Component Initialization > should lazy load restriction config when calendar is first opened 57ms
   ✓ CLACalendar > Component Initialization > should initialize with default range when provided 57ms
   ✓ CLACalendar > Component Initialization > should call onMonthChange when months change 33ms
   ✓ CLACalendar > Calendar Open/Close Behavior > should open calendar when input is clicked 109ms
   ✓ CLACalendar > Calendar Open/Close Behavior > should close calendar on scroll when in popup mode 102ms
   ✓ CLACalendar > Calendar Open/Close Behavior > should handle closeOnClickAway setting 36ms
   ✓ CLACalendar > Date Selection > should handle date selection in single mode 93ms
   ✓ CLACalendar > Date Selection > should handle date range selection 59ms
   ✓ CLACalendar > Date Selection > should handle clear button 59ms
   ✓ CLACalendar > Out of Bounds Scrolling > should handle out of bounds scrolling when enabled 55ms
   ✓ CLACalendar > Out of Bounds Scrolling > should trigger mouse handlers when enableOutOfBoundsScroll is true 38ms
   ✓ CLACalendar > Out of Bounds Scrolling > should not attach mouse handlers when enableOutOfBoundsScroll is false 24ms
   ✓ CLACalendar > Layer Management > should render layer navigation when enabled 28ms
   ✓ CLACalendar > Layer Management > should handle layer change 24ms
   ✓ CLACalendar > Custom Date Formatter > should use custom date formatter when provided 13ms
   ✓ CLACalendar > Input Styling > should apply custom input styles when provided 11ms
   ✓ CLACalendar > Input Styling > should not render style element when no inputStyle is provided 12ms
   ✓ CLACalendar > Settings Validation > should handle invalid settings gracefully 17ms
   ✓ CLACalendar > Settings Validation > should create safe settings with createCalendarSettings 0ms
   ✓ CLACalendar > Height Measurement > should measure calendar height when requested 29ms
   ✓ CLACalendar > Error Boundary > should handle errors gracefully 47ms
   ✓ CLACalendar > Error Boundary > should trigger error handler with error details 49ms
   ✓ CLACalendar > Month Navigation > should navigate to previous and next months 41ms
   ✓ CLACalendar > Month Navigation > should handle month navigation with restrictions 44ms
   ✓ CLACalendar > Month Navigation > should debounce rapid month navigation 70ms
   ✓ CLACalendar > Click Outside Handling > should close calendar on click outside when closeOnClickAway is true 41ms
   ✓ CLACalendar > Click Outside Handling > should not close calendar when clicking inside 48ms
   ✓ CLACalendar > Handler Functions Coverage > should handle selection start and move 43ms
   ✓ CLACalendar > Handler Functions Coverage > should handle date change from input 31ms
   ✓ CLACalendar > Handler Functions Coverage > should handle layer change events 19ms
   ✓ CLACalendar > Popup Mode Behaviors > should handle popup open and close properly 13ms
   ✓ CLACalendar > Popup Mode Behaviors > should handle popup portal rendering with mouse handlers 48ms
   ✓ CLACalendar > Additional Coverage Tests > should handle moveToMonth with restrictions 73ms
   ✓ CLACalendar > Additional Coverage Tests > should handle date validation and formatting 40ms
   ✓ CLACalendar > Additional Coverage Tests > should handle scroll event on window 33ms
   ✓ CLACalendar > Additional Coverage Tests > should handle input class name 10ms
   ✓ CLACalendar > Additional Coverage Tests > should handle display text function 7ms
   ✓ CLACalendar > Additional Coverage Tests > should handle restriction check for date selection 78ms
   ✓ CLACalendar > Additional Coverage Tests > should handle layers factory returning empty array 23ms
   ✓ CLACalendar > Additional Coverage Tests > should handle restriction config factory returning null 12ms
   ✓ CLACalendar > Notification System > should show notifications when enabled 55ms
   ✓ CLACalendar > Notification System > should dismiss notifications 51ms
   ✓ CLACalendar > Notification System > should render notification component when notification state is set 59ms
   ✓ CLACalendar > Additional Features Coverage > should render footer when showFooter is true 52ms
   ✓ CLACalendar > Additional Features Coverage > should render side chevron indicator when enableOutOfBoundsScroll is true 26ms
   ✓ CLACalendar > Additional Features Coverage > should render layer navigation when showLayersNavigation is true 21ms
   ✓ CLACalendar > Additional Features Coverage > should handle showDateInputs when false 21ms
   ✓ CLACalendar > Additional Features Coverage > should handle lazy layers initialization in popup mode 55ms
   ✓ CLACalendar > Additional Features Coverage > should handle error boundary onError callback 3ms
   ✓ CLACalendar > Additional Features Coverage > should handle CLACalendar error boundary logging 13ms
   ✓ CLACalendar > Additional Features Coverage > should render notification when showSelectionAlert is true 26ms
   ✓ CLACalendar > Additional Features Coverage > should handle coordinator open when calendar opens 21ms
   ✓ CLACalendar > Additional Features Coverage > should handle enableOutOfBoundsScroll mouse events 18ms
   ✓ CLACalendar > Additional Function Coverage > should handle calendar initialization with default range 17ms
   ✓ CLACalendar > Additional Function Coverage > should handle initialActiveLayer setting 21ms
   ✓ CLACalendar > Additional Function Coverage > should handle continuous month advancement with out of bounds scroll 130ms
   ✓ CLACalendar > Additional Function Coverage > should handle date validation with different formats 107ms
   ✓ CLACalendar > Additional Function Coverage > should handle document mouse events when not initialized 1ms
   ✓ CLACalendar > Additional Function Coverage > should handle calendar clear with display range update 37ms
   ✓ CLACalendar > Additional Function Coverage > should handle submit with display range update 93ms
   ✓ CLACalendar > Additional Function Coverage > should handle coordinator state changes 70ms
   ✓ CLACalendar > Additional Function Coverage > should handle date restriction checks 41ms
   × CLACalendar > Additional Function Coverage > should handle isReady state transitions 5006ms
     → Test timed out in 5000ms.
If this is a long-running test, pass a timeout value as the last argument or configure it globally with "testTimeout".
   ✓ CLACalendar > Additional Function Coverage > should cleanup coordinator on unmount 3ms
   ✓ CLACalendar > Additional Function Coverage > should handle coordinator state changes when open 42ms
   ✓ CLACalendar > Additional Function Coverage > should handle renderLayer with uninitialized calendar 1ms
   × CLACalendar > Additional Function Coverage > should handle error boundary console logging 22ms
     → expected "error" to be called with arguments: [ …(3) ][90m

Received: 

[1m  1st error call:

[22m[2m  [[22m
[32m-   StringContaining "Calendar Error",[90m
[32m-   Any<Error>,[90m
[32m-   Any<Object>,[90m
[31m+   "Error: Uncaught [Error: Test error for console][90m
[31m+     at reportException (/Users/bstar/projects/cla/calendar/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)[90m
[31m+     at innerInvokeEventListeners (/Users/bstar/projects/cla/calendar/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)[90m
[31m+     at invokeEventListeners (/Users/bstar/projects/cla/calendar/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)[90m
[31m+     at HTMLUnknownElementImpl._dispatch (/Users/bstar/projects/cla/calendar/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)[90m
[31m+     at HTMLUnknownElementImpl.dispatchEvent (/Users/bstar/projects/cla/calendar/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)[90m
[31m+     at HTMLUnknownElement.dispatchEvent (/Users/bstar/projects/cla/calendar/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)[90m
[31m+     at Object.invokeGuardedCallbackDev (/Users/bstar/projects/cla/calendar/node_modules/react-dom/cjs/react-dom.development.js:4213:16)[90m
[31m+     at invokeGuardedCallback (/Users/bstar/projects/cla/calendar/node_modules/react-dom/cjs/react-dom.development.js:4277:31)[90m
[31m+     at beginWork$1 (/Users/bstar/projects/cla/calendar/node_modules/react-dom/cjs/react-dom.development.js:27490:7)[90m
[31m+     at performUnitOfWork (/Users/bstar/projects/cla/calendar/node_modules/react-dom/cjs/react-dom.development.js:26599:12)",[90m
[31m+   Error {[90m
[31m+     "message": "Test error for console",[90m
[31m+   },[90m
[2m  ][22m

[1m  2nd error call:

[22m[2m  [[22m
[32m-   StringContaining "Calendar Error",[90m
[32m-   Any<Error>,[90m
[32m-   Any<Object>,[90m
[31m+   "Error: Uncaught [Error: Test error for console][90m
[31m+     at reportException (/Users/bstar/projects/cla/calendar/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)[90m
[31m+     at innerInvokeEventListeners (/Users/bstar/projects/cla/calendar/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)[90m
[31m+     at invokeEventListeners (/Users/bstar/projects/cla/calendar/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)[90m
[31m+     at HTMLUnknownElementImpl._dispatch (/Users/bstar/projects/cla/calendar/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)[90m
[31m+     at HTMLUnknownElementImpl.dispatchEvent (/Users/bstar/projects/cla/calendar/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)[90m
[31m+     at HTMLUnknownElement.dispatchEvent (/Users/bstar/projects/cla/calendar/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)[90m
[31m+     at Object.invokeGuardedCallbackDev (/Users/bstar/projects/cla/calendar/node_modules/react-dom/cjs/react-dom.development.js:4213:16)[90m
[31m+     at invokeGuardedCallback (/Users/bstar/projects/cla/calendar/node_modules/react-dom/cjs/react-dom.development.js:4277:31)[90m
[31m+     at beginWork$1 (/Users/bstar/projects/cla/calendar/node_modules/react-dom/cjs/react-dom.development.js:27490:7)[90m
[31m+     at performUnitOfWork (/Users/bstar/projects/cla/calendar/node_modules/react-dom/cjs/react-dom.development.js:26599:12)",[90m
[31m+   Error {[90m
[31m+     "message": "Test error for console",[90m
[31m+   },[90m
[2m  ][22m

[1m  3rd error call:

[22m[2m  [[22m
[32m-   StringContaining "Calendar Error",[90m
[32m-   Any<Error>,[90m
[32m-   Any<Object>,[90m
[31m+   "The above error occurred in the <ErrorComponent> component:[90m
[31m+[90m
[31m+     at ErrorComponent (/Users/bstar/projects/cla/calendar/src/components/CLACalendar.test.tsx:2470:15)[90m
[31m+     at CalendarErrorBoundary (/Users/bstar/projects/cla/calendar/src/components/ErrorBoundary.tsx:10:5)[90m
[31m+     at TestWrapper (/Users/bstar/projects/cla/calendar/src/components/CLACalendar.test.tsx:2473:59)[90m
[31m+[90m
[31m+ React will try to recreate this component tree from scratch using the error boundary you provided, CalendarErrorBoundary.",[90m
[2m  ][22m

[1m  4th error call:

[22m[2m  [[22m
[32m-   StringContaining "Calendar Error",[90m
[32m-   Any<Error>,[90m
[32m-   Any<Object>,[90m
[31m+   "Error:",[90m
[31m+   Error {[90m
[31m+     "message": "Test error for console",[90m
[31m+   },[90m
[2m  ][22m

[1m  5th error call:

[22m[2m  [[22m
[32m-   StringContaining "Calendar Error",[90m
[32m-   Any<Error>,[90m
[32m-   Any<Object>,[90m
[31m+   "Error Info:",[90m
[31m+   {[90m
[31m+     "componentStack": "[90m
[31m+     at ErrorComponent (/Users/bstar/projects/cla/calendar/src/components/CLACalendar.test.tsx:2470:15)[90m
[31m+     at CalendarErrorBoundary (/Users/bstar/projects/cla/calendar/src/components/ErrorBoundary.tsx:10:5)[90m
[31m+     at TestWrapper (/Users/bstar/projects/cla/calendar/src/components/CLACalendar.test.tsx:2473:59)",[90m
[31m+   },[90m
[2m  ][22m
[39m[90m

Number of calls: [1m5[22m
[39m
   ✓ CLACalendar > Additional Function Coverage > should handle disabled popup mode interactions 13ms
   ✓ CLACalendar > Additional Function Coverage > should handle inputStyle with various CSS properties 1ms

⎯⎯⎯⎯⎯⎯⎯ Failed Tests 2 ⎯⎯⎯⎯⎯⎯⎯

 FAIL  src/components/CLACalendar.test.tsx > CLACalendar > Additional Function Coverage > should handle isReady state transitions
Error: Test timed out in 5000ms.
If this is a long-running test, pass a timeout value as the last argument or configure it globally with "testTimeout".
 ❯ src/components/CLACalendar.test.tsx:2034:5
    2032|     });
    2033| 
    2034|     it('should handle isReady state transitions', async () => {
       |     ^
    2035|       const { container, rerender } = render(
    2036|         <CLACalendar

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[1/2]⎯

 FAIL  src/components/CLACalendar.test.tsx > CLACalendar > Additional Function Coverage > should handle error boundary console logging
AssertionError: expected "error" to be called with arguments: [ …(3) ][90m

Received: 

[1m  1st error call:

[22m[2m  [[22m
[32m-   StringContaining "Calendar Error",[90m
[32m-   Any<Error>,[90m
[32m-   Any<Object>,[90m
[31m+   "Error: Uncaught [Error: Test error for console][90m
[31m+     at reportException (/Users/bstar/projects/cla/calendar/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)[90m
[31m+     at innerInvokeEventListeners (/Users/bstar/projects/cla/calendar/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)[90m
[31m+     at invokeEventListeners (/Users/bstar/projects/cla/calendar/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)[90m
[31m+     at HTMLUnknownElementImpl._dispatch (/Users/bstar/projects/cla/calendar/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)[90m
[31m+     at HTMLUnknownElementImpl.dispatchEvent (/Users/bstar/projects/cla/calendar/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)[90m
[31m+     at HTMLUnknownElement.dispatchEvent (/Users/bstar/projects/cla/calendar/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)[90m
[31m+     at Object.invokeGuardedCallbackDev (/Users/bstar/projects/cla/calendar/node_modules/react-dom/cjs/react-dom.development.js:4213:16)[90m
[31m+     at invokeGuardedCallback (/Users/bstar/projects/cla/calendar/node_modules/react-dom/cjs/react-dom.development.js:4277:31)[90m
[31m+     at beginWork$1 (/Users/bstar/projects/cla/calendar/node_modules/react-dom/cjs/react-dom.development.js:27490:7)[90m
[31m+     at performUnitOfWork (/Users/bstar/projects/cla/calendar/node_modules/react-dom/cjs/react-dom.development.js:26599:12)",[90m
[31m+   Error {[90m
[31m+     "message": "Test error for console",[90m
[31m+   },[90m
[2m  ][22m

[1m  2nd error call:

[22m[2m  [[22m
[32m-   StringContaining "Calendar Error",[90m
[32m-   Any<Error>,[90m
[32m-   Any<Object>,[90m
[31m+   "Error: Uncaught [Error: Test error for console][90m
[31m+     at reportException (/Users/bstar/projects/cla/calendar/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)[90m
[31m+     at innerInvokeEventListeners (/Users/bstar/projects/cla/calendar/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)[90m
[31m+     at invokeEventListeners (/Users/bstar/projects/cla/calendar/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)[90m
[31m+     at HTMLUnknownElementImpl._dispatch (/Users/bstar/projects/cla/calendar/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)[90m
[31m+     at HTMLUnknownElementImpl.dispatchEvent (/Users/bstar/projects/cla/calendar/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)[90m
[31m+     at HTMLUnknownElement.dispatchEvent (/Users/bstar/projects/cla/calendar/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)[90m
[31m+     at Object.invokeGuardedCallbackDev (/Users/bstar/projects/cla/calendar/node_modules/react-dom/cjs/react-dom.development.js:4213:16)[90m
[31m+     at invokeGuardedCallback (/Users/bstar/projects/cla/calendar/node_modules/react-dom/cjs/react-dom.development.js:4277:31)[90m
[31m+     at beginWork$1 (/Users/bstar/projects/cla/calendar/node_modules/react-dom/cjs/react-dom.development.js:27490:7)[90m
[31m+     at performUnitOfWork (/Users/bstar/projects/cla/calendar/node_modules/react-dom/cjs/react-dom.development.js:26599:12)",[90m
[31m+   Error {[90m
[31m+     "message": "Test error for console",[90m
[31m+   },[90m
[2m  ][22m

[1m  3rd error call:

[22m[2m  [[22m
[32m-   StringContaining "Calendar Error",[90m
[32m-   Any<Error>,[90m
[32m-   Any<Object>,[90m
[31m+   "The above error occurred in the <ErrorComponent> component:[90m
[31m+[90m
[31m+     at ErrorComponent (/Users/bstar/projects/cla/calendar/src/components/CLACalendar.test.tsx:2470:15)[90m
[31m+     at CalendarErrorBoundary (/Users/bstar/projects/cla/calendar/src/components/ErrorBoundary.tsx:10:5)[90m
[31m+     at TestWrapper (/Users/bstar/projects/cla/calendar/src/components/CLACalendar.test.tsx:2473:59)[90m
[31m+[90m
[31m+ React will try to recreate this component tree from scratch using the error boundary you provided, CalendarErrorBoundary.",[90m
[2m  ][22m

[1m  4th error call:

[22m[2m  [[22m
[32m-   StringContaining "Calendar Error",[90m
[32m-   Any<Error>,[90m
[32m-   Any<Object>,[90m
[31m+   "Error:",[90m
[31m+   Error {[90m
[31m+     "message": "Test error for console",[90m
[31m+   },[90m
[2m  ][22m

[1m  5th error call:

[22m[2m  [[22m
[32m-   StringContaining "Calendar Error",[90m
[32m-   Any<Error>,[90m
[32m-   Any<Object>,[90m
[31m+   "Error Info:",[90m
[31m+   {[90m
[31m+     "componentStack": "[90m
[31m+     at ErrorComponent (/Users/bstar/projects/cla/calendar/src/components/CLACalendar.test.tsx:2470:15)[90m
[31m+     at CalendarErrorBoundary (/Users/bstar/projects/cla/calendar/src/components/ErrorBoundary.tsx:10:5)[90m
[31m+     at TestWrapper (/Users/bstar/projects/cla/calendar/src/components/CLACalendar.test.tsx:2473:59)",[90m
[31m+   },[90m
[2m  ][22m
[39m[90m

Number of calls: [1m5[22m
[39m
 ❯ src/components/CLACalendar.test.tsx:2182:28
    2180|       
    2181|       // Check that console.error was called with the error details
    2182|       expect(consoleError).toHaveBeenCalledWith(
       |                            ^
    2183|         expect.stringContaining('Calendar Error'),
    2184|         expect.any(Error),

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[2/2]⎯


 Test Files  1 failed | 27 passed (28)
      Tests  2 failed | 828 passed | 3 skipped (833)
   Start at  12:10:05
   Duration  10.98s (transform 1.36s, setup 5.50s, collect 20.67s, tests 14.38s, environment 10.51s, prepare 2.17s)

